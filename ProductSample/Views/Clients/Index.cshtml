@model IEnumerable<ProductSample.Models.Client>

@using PagedList
@using PagedList.Mvc
@{
    var data = Model as IPagedList;
}

@{
    ViewBag.Title = "Index";
    if (IsAjax)
    {
        Layout = "";
    }
}

<script>
    @if (TempData["Msg"] != null)
    {
        <text>
        alert('@(Convert.ToString(TempData["Msg"]))');
        </text>
    }
</script>

@section Scripts {
    <script>
        function ajaxSuccess() {
            console.log('Succeed');
        }
    </script>
}

<h2>Index</h2>

<p>
    @Ajax.ActionLink("Create New", "Create", new AjaxOptions() { UpdateTargetId = "Details" }) 
    <img id="loading" src="~/Content/ajax-loader.gif" style="display: none" />
</p>

@*@Html.PagedListPager(data, p => Url.Action("Index", new { pageNo = p }))*@
@Html.PagedListPager(data, p => Url.Action("Index", new { pageNo = p }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing("#main"))

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MiddleName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateOfBirth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreditRating)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.XCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TelephoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Street1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Street2)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ZipCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Longitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Latitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Notes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Occupation.OccupationName)
        </th>*@
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MiddleName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Gender)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateOfBirth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreditRating)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.XCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TelephoneNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Street1)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Street2)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ZipCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Longitude)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Latitude)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Notes)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Occupation.OccupationName)
        </td>*@
        <td>
            @Ajax.ActionLink("Edit", "Edit", new { id = item.ClientId , pageNo = (int)ViewBag.pageNo },
                new AjaxOptions { UpdateTargetId = "Details" }) |
            @Ajax.ActionLink("Details", "Details", new { id = item.ClientId },
                new AjaxOptions { UpdateTargetId = "Details" }) |
            @Ajax.ActionLink("Delete", "Delete", new { id = item.ClientId },
                new AjaxOptions { UpdateTargetId = "Details" })
        </td>
    </tr>
}

</table>

@*@Html.PagedListPager(data, p => Url.Action("Index", new { pageNo = p }))*@
@Html.PagedListPager(data, p => Url.Action("Index", new { pageNo = p }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing("#main"))

<div id="Details"></div>
